<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getIndex</mutatedMethod><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getLineNumber</mutatedMethod><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getMutatedClass</mutatedMethod><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setMutatedMethod</mutatedMethod><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setMutatedClass</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setMutator</mutatedMethod><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>6</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getMutator</mutatedMethod><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setLineNumber</mutatedMethod><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setKillingTest</mutatedMethod><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>isDetected</mutatedMethod><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setSourceFile</mutatedMethod><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getKillingTest</mutatedMethod><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setIndex</mutatedMethod><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getStatus</mutatedMethod><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getMutatedMethod</mutatedMethod><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>getSourceFile</mutatedMethod><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setStatus</mutatedMethod><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>setDetected</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Mutation.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Mutation</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>print</mutatedMethod><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>10</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>print</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>print</mutatedMethod><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>getNumerator</mutatedMethod><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>getDenominator</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>asPercentage</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>print</mutatedMethod><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>equals</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>print</mutatedMethod><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>toString</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>Ratio.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Ratio</mutatedClass><mutatedMethod>compareTo</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>getKillRatioMustImprove</mutatedMethod><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>getDescriptor</mutatedMethod><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>percentageThreshold</mutatedMethod><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>locateMutationReports</mutatedMethod><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>percentageThreshold</mutatedMethod><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>getRequiredMonitorService</mutatedMethod><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>mustImprove</mutatedMethod><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>decideBuildResult</mutatedMethod><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>getMinimumKillRatio</mutatedMethod><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>getMutationStatsFile</mutatedMethod><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>mustImprove</mutatedMethod><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>locateMutationReports</mutatedMethod><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher</mutatedClass><mutatedMethod>perform</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$2</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>PitPublisher_DisplayName</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_DisplayName</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_PitPublisher_DisplayName</mutatedMethod><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>PitPublisher_DisplayName</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>PitPublisher_DisplayName</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_DisplayName</mutatedMethod><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>PitPublisher_DisplayName</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_PitPublisher_DisplayName</mutatedMethod><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_DisplayName</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_DisplayName</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_DisplayName</mutatedMethod><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_DisplayName</mutatedMethod><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_DisplayName</mutatedMethod><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_Description</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_PitPublisher_DisplayName</mutatedMethod><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_PitPublisher_DisplayName</mutatedMethod><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>_BuildAction_DisplayName</mutatedMethod><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>Messages.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.Messages</mutatedClass><mutatedMethod>BuildAction_Description</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>decideResult</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>configure</mutatedMethod><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>newInstance</mutatedMethod><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>configure</mutatedMethod><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>newInstance</mutatedMethod><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>configure</mutatedMethod><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitPublisher.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitPublisher$DescriptorImpl</mutatedClass><mutatedMethod>configure</mutatedMethod><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsNullIfNoPreviousBuilds(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsLastSuccessfulBuild(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsLastSuccessfulBuild(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsNullIfNoPreviousBuilds(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getIconFileName</mutatedMethod><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsNullIfNoPreviousBuilds(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsLastSuccessfulBuild(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsLastSuccessfulBuild(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getKillRatio</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getTarget</mutatedMethod><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getKillRatio</mutatedMethod><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getUrlName</mutatedMethod><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getPreviousAction</mutatedMethod><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.PitBuildActionTest.previousReturnsLastSuccessfulBuild(org.jenkinsci.plugins.pitmutation.PitBuildActionTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>PitBuildAction.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.PitBuildAction</mutatedClass><mutatedMethod>getBuildHealth</mutatedMethod><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>getKillRatio</mutatedMethod><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>sourceFilenames</mutatedMethod><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>sourceFilenames</mutatedMethod><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>getMutationsForClassName</mutatedMethod><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>getMutationsForClassName</mutatedMethod><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>getMutations</mutatedMethod><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.canDigestAMutation(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.InlineConstantMutator</mutator><index>0</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>3</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>2</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.sortsMutationsByClassName(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MutationReport.java</sourceFile><mutatedClass>org.jenkinsci.plugins.pitmutation.MutationReport</mutatedClass><mutatedMethod>digestMutations</mutatedMethod><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><killingTest>org.jenkinsci.plugins.pitmutation.MutationReportTest.countsKills(org.jenkinsci.plugins.pitmutation.MutationReportTest)</killingTest></mutation>
</mutations>
